

openstack volume list

openstack volume show "volume id"

openstack volume create my-vol-owncloud --size 1

openstack volume create --image "image id" --size 2 --availability-zone nova my-new-volume

openstack server add volume "server id" "volume id" --device /dev/vdb

openstack volume set "volume id" --size 10

openstack server remove volume "server id" "volume id"

openstack volume delete my-new-volume

fdisk -l

fdisk /dev/vdb

n

p

w

mkfs.ext4 /dev/vdb1

mount /dev/vdb1 /mnt/

df -h

openstack server create --flavor ds512M \
 --volume debian_volume \
 --nic net-id=5b85e117-de84-41ae-b9ce-ceec9eb679ad \
 --security-group default \
 --key-name myprivatekey \
 server3

=====================================================

openstack container list

openstack container show container1

openstack object list container1

openstack object show container1 WIFI.txt

openstack object save container1 WIFI.txt (guardar en local)

openstack object create --name prueba container1 demo-openrc.sh (subir fichero)

openstack object create container1 demo-openrc.sh (subir fichero sin renombrar)

swift post --read-acl ".r:*,.rlistings" container1

swift post --read-acl ".r:*" --write-acl "*:*" container1



In this proof of concept we are going to create 2 instances (server1 and server2) and we will create 2 volumes (volume1 and volume2) that we will attach to these same VMs. Volumes are persistent, so they will not be deleted by deleting instances, unlike disks, which are ephemeral and are deleted by deleting them.
Once these volumes have been created, we must partition and format them, as well as mount them within the file system.